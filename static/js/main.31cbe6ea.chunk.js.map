{"version":3,"sources":["Components/static/Images/posterNotFound.jpg","Components/SearchBox.js","Components/Header.js","Components/Home.js","Components/utils.js","Components/Pagination.js","Components/SearchResults.js","Components/SearchPage.js","Components/SearchItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBox","setSearchQuery","useState","searchContent","setSearchContent","searchContext","useContext","searchQueryContext","useEffect","history","useHistory","submitHandler","e","preventDefault","push","split","join","className","onSubmit","type","placeholder","value","onChange","target","onClick","Header","to","Home","moviePoster","path","imgNotFound","onerror","src","posternotfound","Pagination","pageNos","n","pages","i","totalPages","style","color","map","index","key","SearchResults","errorMsg","movieDataContext","movieDataState","loading","dispatch","error","movieData","searchTerms","useParams","textAlign","searchQuery","total_pages","results","item","id","poster_path","alt","title","onError","SearchPage","fontSize","padding","SearchItem","movieId","setMovieData","axios","get","params","api_key","process","then","res","console","log","data","catch","err","backdrop_path","tagline","genres","name","overview","release_date","revenue","original_language","adult","production_companies","vote_average","vote_count","React","createContext","initialMovieDatastate","reducer","state","action","payload","App","useReducer","query","Provider","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.31cbe6ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/posterNotFound.f1004ffe.jpg\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport \"./static/searchbox.scss\";\r\nimport { searchQueryContext } from \"../App\";\r\n\r\nconst SearchBox = ({ setSearchQuery }) => {\r\n  const [searchContent, setSearchContent] = useState(\"\");\r\n  const searchContext = useContext(searchQueryContext);\r\n\r\n  useEffect(() => {\r\n    return searchContext.setSearchQuery(\"\");\r\n  }, []);\r\n  let history = useHistory();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"asd\");\r\n    if (searchContent) {\r\n      searchContext.setSearchQuery(searchContent);\r\n      // history.push(\"/search_results\");\r\n      history.push(`/search_results/${searchContent.split(\" \").join(\"_\")}`);\r\n    } else {\r\n      history.push(\"/movie-info-with-react\");\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"container-searchbox m-3\" onSubmit={submitHandler}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control p-2\"\r\n        placeholder=\"Search movie...\"\r\n        value={searchContent}\r\n        onChange={(e) => {\r\n          setSearchContent(e.target.value);\r\n        }}\r\n      />\r\n      {/* <Link\r\n        type=\"submit\"\r\n        className=\"btn btn-outline-fmv bg-fmv text-white\"\r\n        to=\"/search_results\"\r\n        onClick={submitHandler}\r\n      >\r\n        <i className=\"fa fa-search \"></i>\r\n      </Link> */}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-outline-fmv bg-fmv text-white\"\r\n        onClick={submitHandler}\r\n      >\r\n        <i className=\"fa fa-search \"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./static/header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"container-header p-2\">\r\n      <div className=\"header-left\">\r\n        <div className=\"btn btn-default genre-list\">\r\n          <i className=\"fa fa-list bg-bgicon p-1 rounded \"></i>\r\n        </div>\r\n        <h2 className=\"bg-fmv rounded p-1\">\r\n          <Link className=\"link\" to=\"/movie-info-with-react\">\r\n            GETMOVIES\r\n          </Link>\r\n        </h2>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span className=\"p-1\">\r\n          <Link to=\"/movie-info-with-react\">Login</Link>\r\n        </span>\r\n        {/* <span className=\"header-searchbox\">\r\n          <SearchBox />\r\n        </span> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nconst Home = () => {\r\n  return <div>HOMEs</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport posternotfound from \"./static/Images/posterNotFound.jpg\";\r\n\r\nexport const moviePoster = (path) => {\r\n  return `https://image.tmdb.org/t/p/w200${path}`;\r\n};\r\n\r\nexport const imgNotFound = (e) => {\r\n  e.target.onerror = null;\r\n  e.target.src = posternotfound;\r\n};\r\n\r\nexport const onLoading = () => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>LOADING...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const onError = (errorMsg) => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>{errorMsg}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Pagination = ({ totalPages }) => {\r\n  //   console.log(totalPages);\r\n  const pages = (n) => {\r\n    let pages = [];\r\n    for (let i = 1; i <= n; i++) {\r\n      pages.push(i);\r\n    }\r\n    return pages;\r\n  };\r\n  //   console.log(pages(totalPages));\r\n  // useEffect(() => {\r\n  //     const pageNo = pages(totalPages)\r\n  //     pageNo\r\n  // }\r\n  //     ,[]\r\n  // )\r\n  const pageNos = pages(totalPages);\r\n\r\n  return (\r\n    <div style={{ color: \"white\" }}>\r\n      <ul>\r\n        {pageNos.map((value, index) => {\r\n          return <li key=\"index\">{value}</li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { movieDataContext } from \"../App\";\r\nimport \"./static/Searchresults.scss\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { onError, onLoading, imgNotFound, moviePoster } from \"./utils\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst SearchResults = () => {\r\n  const { movieDataState, dispatch } = useContext(movieDataContext);\r\n  const { loading, error, movieData } = movieDataState;\r\n  const searchTerms = useParams();\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     console.log(\"destroy component search results\");\r\n  //     movieContext.dispatch({ type: \"ON_RETURN\" });\r\n  //   };\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid sr-container bg-bgc\">\r\n      {loading ? onLoading() : null}\r\n      {error ? onError(error) : null}\r\n\r\n      <h4 style={{ color: \"#FFF\" }}>\r\n        search results for \"{searchTerms.searchQuery.split(\"_\").join(\" \")}\"\r\n      </h4>\r\n      <Pagination totalPages={movieData.total_pages} />\r\n      <ul className=\"row justify-content-center sr-row pl-3 mt-4\">\r\n        {movieData.results\r\n          ? movieData.results.map((item) => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 sr-col pl-1 pr-1 mb-2 \"\r\n                >\r\n                  <Link to={`/movie/${item.id}`}>\r\n                    <img\r\n                      src={moviePoster(item.poster_path)}\r\n                      alt={item.title}\r\n                      // style={{ width: \"150px\" }}\r\n                      onError={imgNotFound}\r\n                    />\r\n                    <p className=\"\">{item.title}</p>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport \"./static/SearchPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst SearchPage = () => {\r\n  return (\r\n    <div className=\"container-searchpage\">\r\n      <div className=\"logo \">\r\n        <h1 className=\"bg-fmv rounded p-1 mt-4 mb-3 text-white\">GETMOVIES</h1>\r\n      </div>\r\n\r\n      <SearchBox />\r\n\r\n      <p\r\n        style={{\r\n          fontSize: \"1.2em\",\r\n          textAlign: \"center\",\r\n          padding: \"1em 1.5em \",\r\n        }}\r\n      >\r\n        getmovies - Just the place for getting reviews of movies and tv series!{\" \"}\r\n      </p>\r\n      <div className=\"homebtn\">\r\n        <Link to=\"/Home\" className=\"btn btn-primary btn-lg bg-fmv mt-2 \">\r\n          Go to Home page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { apiKey, movieDataContext } from \"../App\";\r\nimport { imgNotFound, onError, onLoading, moviePoster } from \"./utils\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./static/SearchItem.scss\";\r\n\r\nconst SearchItem = () => {\r\n  const movieId = useParams();\r\n  const [movieData, setMovieData] = useState([]);\r\n  // const { movieDataState, dispatch } = useContext(movieDataContext);\r\n\r\n  // const { loading, error, movieData } = movieDataState;\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${movieId.id}`, {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setMovieData(res.data);\r\n        // dispatch({ type: \"MOVIE_ITEM\", payload: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err) {\r\n        //   dispatch({ type: \"ON_ERROR\" });\r\n        // }\r\n      });\r\n    // return () => {\r\n    //   dispatch({ type: \"ON_RETURN\" });\r\n    // };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(movieData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 container-item bg-bgc text-white\">\r\n      <div className=\"error-loading\">\r\n        {/* {loading ? onLoading() : null} */}\r\n        {/* {error ? onError(error) : null} */}\r\n      </div>\r\n      <div className=\"container-movie-detail\">\r\n        <div className=\"img-backdrop\">\r\n          <img\r\n            src={moviePoster(movieData.backdrop_path)}\r\n            alt={movieData.title}\r\n            onError={imgNotFound}\r\n          />\r\n          <div>\r\n            <h1>{movieData.title}</h1>\r\n            <p>{movieData.tagline}</p>\r\n            <ul>\r\n              {movieData.genres\r\n                ? movieData.genres.map((item) => {\r\n                    return <li key={item.id}>{item.name}</li>;\r\n                  })\r\n                : null}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row pl-5 pr-5 pb-5 movie-detail \">\r\n          <img\r\n            className=\"offset-xl-1 offset-lg-1 col-xl-3 col-lg-3 col-md-4 col-sm-4 \"\r\n            src={moviePoster(movieData.poster_path)}\r\n            alt={movieData.title}\r\n            onError={imgNotFound}\r\n          />\r\n          <div className=\"offset-xl-1 offset-lg-1 offset-sm-1 col-lg-6 col-md-6 col-sm-6 align-self-center descriptions\">\r\n            <p>\r\n              <span>overview:</span> {movieData.overview}\r\n            </p>\r\n            <p>\r\n              <span>Release Date:</span> {movieData.release_date}\r\n            </p>\r\n            <p>\r\n              <span>Box Office Revenue:</span> {movieData.revenue} USD\r\n            </p>\r\n            <p>\r\n              <span>language:</span> {movieData.original_language}\r\n            </p>\r\n            <p>\r\n              <span>adult:</span> {movieData.adult ? \"true\" : \"false\"}\r\n            </p>\r\n            <ul>\r\n              <span>movie by:</span>\r\n\r\n              {movieData.production_companies\r\n                ? movieData.production_companies.map((item) => {\r\n                    return <li key={item.id}>{item.name} </li>;\r\n                  })\r\n                : null}\r\n            </ul>\r\n\r\n            <p>\r\n              ratings: {movieData.vote_average}/10 amongst{\" \"}\r\n              {movieData.vote_count} voters\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport \"./App.scss\";\nimport axios from \"axios\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./Components/Header\";\nimport Home from \"./Components/Home\";\nimport SearchResults from \"./Components/SearchResults\";\nimport SearchPage from \"./Components/SearchPage\";\nimport SearchItem from \"./Components/SearchItem\";\n\nexport const searchQueryContext = React.createContext();\nexport const movieDataContext = React.createContext();\n\n// export const apiKey = \"b13b73e49a3f6baa037e1e91855f9c63\";\n\nconst initialMovieDatastate = {\n  loading: true,\n  error: \"\",\n  movieData: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"MOVIE_SEARCH_SUCCESS\":\n      return { ...state, loading: false, error: \"\", movieData: action.payload };\n    case \"ON_RETURN\":\n      return { ...state, loading: true, movieData: [] };\n    case \"ON_ERROR\":\n      return { ...state, loading: false, error: \"error\" };\n    case \"MOVIE_ITEM\":\n      return { ...state, loading: false, error: \"\", movieData: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const [movieDataState, dispatch] = useReducer(reducer, initialMovieDatastate);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.themoviedb.org/3/search/movie\", {\n        params: {\n          api_key: process.env.REACT_APP_API_KEY,\n          query: searchQuery,\n        },\n      })\n      .then((res) => {\n        // console.log(res);\n        dispatch({ type: \"MOVIE_SEARCH_SUCCESS\", payload: res.data });\n      })\n      .catch((err) => {\n        console.log(err);\n        // dispatch({ type: \"ON_ERROR\" });\n      });\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <searchQueryContext.Provider\n        value={{\n          searchQuery: searchQuery,\n          setSearchQuery: setSearchQuery,\n        }}\n      >\n        <Header />\n      </searchQueryContext.Provider>\n      {/* route components  */}\n\n      <searchQueryContext.Provider\n        value={{\n          searchQuery: searchQuery,\n          setSearchQuery: setSearchQuery,\n        }}\n      >\n        <Route\n          exact\n          path=\"/movie-info-with-react\"\n          component={SearchPage}\n        ></Route>\n      </searchQueryContext.Provider>\n\n      <Route exact path=\"/Home\" component={Home}></Route>\n\n      <Route exact path=\"/search_results/:searchQuery\">\n        <movieDataContext.Provider\n          value={{ movieDataState: movieDataState, dispatch: dispatch }}\n        >\n          <SearchResults />\n        </movieDataContext.Provider>\n      </Route>\n      <movieDataContext.Provider\n        value={{ movieDataState: movieDataState, dispatch: dispatch }}\n      >\n        <Route exact path=\"/movie/:id\" component={SearchItem}></Route>\n      </movieDataContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}