{"version":3,"sources":["Components/static/Images/posterNotFound.jpg","Components/SearchBox.js","Components/Header.js","Components/utils.js","Components/Home/Carousel/Indicator.js","Components/Home/Carousel/Arrow.js","Components/Home/Carousel/MovieCarousel.js","Components/Home/TopRatedMovies.js","Components/Home/PopularMovies.js","Components/Home/UpcomingMovies.js","Components/Home/Home.js","Components/SearchPage.js","Components/Credits.js","Components/SearchItem.js","Components/Pagination.js","Components/SearchResult2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBox","setSearchQuery","useState","searchContent","setSearchContent","searchContext","useContext","searchQueryContext","history","useHistory","submitHandler","e","preventDefault","push","split","join","className","onSubmit","type","placeholder","value","onChange","target","onClick","Header","to","moviePoster","path","imgNotFound","onerror","src","posternotfound","Indicator","nowPlaying","activeIndex","setActiveIndex","slice","map","slide","index","key","goToSlide","Arrow","direction","href","onArrowClick","MovieCarousel","genreById","setNowPlaying","useEffect","axios","get","params","api_key","process","then","res","data","results","catch","err","console","log","backdrop_path","alt","title","onError","id","release_date","vote_average","genre_ids","item","TopRatedMovies","topRated","setTopRated","poster_path","PopularMovies","popular","setPopular","UpcomingMovies","upcoming","setUpcoming","Home","setGenreById","merge","genres","style","backgroundColor","SearchPage","fontSize","textAlign","padding","Credits","movieId","castMember","setCastMember","cast","listStyle","margin","name","SearchItem","useParams","movieData","setMovieData","tagline","overview","revenue","original_language","adult","production_companies","vote_count","Pagination","searchQuery","totalPages","currentPage","setCurrentPage","pageNos","n","pages","i","display","justifyContent","SearchResult2","setTotalPages","searchResults","setSearchResults","query","page","pageNo","total_pages","color","React","createContext","App","Provider","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b419e61a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/posterNotFound.f1004ffe.jpg\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./static/searchbox.scss\";\r\nimport { searchQueryContext } from \"../App\";\r\n\r\nconst SearchBox = ({ setSearchQuery }) => {\r\n  const [searchContent, setSearchContent] = useState(\"\");\r\n  const searchContext = useContext(searchQueryContext);\r\n\r\n  // useEffect(() => {\r\n  //   return searchContext.setSearchQuery(\"\");\r\n  // }, []);\r\n  let history = useHistory();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"asd\");\r\n    if (searchContent) {\r\n      searchContext.setSearchQuery(searchContent);\r\n      // history.push(\"/search_results\");\r\n      // history.push(`/search_results/${searchContent.split(\" \").join(\"_\")}`);\r\n      history.push(`/search_results/${searchContent.split(\" \").join(\"_\")}/1`);\r\n    } else {\r\n      history.push(\"/movie-info-with-react\");\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"container-searchbox m-3\" onSubmit={submitHandler}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control p-2\"\r\n        placeholder=\"Search movie...\"\r\n        value={searchContent}\r\n        onChange={(e) => {\r\n          setSearchContent(e.target.value);\r\n        }}\r\n      />\r\n      {/* <Link\r\n        type=\"submit\"\r\n        className=\"btn btn-outline-fmv bg-fmv text-white\"\r\n        to=\"/search_results\"\r\n        onClick={submitHandler}\r\n      >\r\n        <i className=\"fa fa-search \"></i>\r\n      </Link> */}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-outline-fmv bg-fmv text-white\"\r\n        onClick={submitHandler}\r\n      >\r\n        <i className=\"fa fa-search \"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./static/header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"container-header p-2\">\r\n      <div className=\"header-left\">\r\n        <div className=\"btn btn-default genre-list\">\r\n          <i className=\"fa fa-list bg-bgicon p-1 rounded \"></i>\r\n        </div>\r\n        <h2 className=\"bg-fmv rounded p-1\">\r\n          <Link className=\"link\" to=\"/movie-info-with-react\">\r\n            GETMOVIES\r\n          </Link>\r\n        </h2>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span className=\"p-1\">\r\n          <Link to=\"/movie-info-with-react\">Login</Link>\r\n        </span>\r\n        {/* <span className=\"header-searchbox\">\r\n          <SearchBox />\r\n        </span> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport posternotfound from \"./static/Images/posterNotFound.jpg\";\r\n\r\nexport const moviePoster = (path) => {\r\n  return `https://image.tmdb.org/t/p/original${path}`;\r\n};\r\n\r\nexport const imgNotFound = (e) => {\r\n  e.target.onerror = null;\r\n  e.target.src = posternotfound;\r\n};\r\n\r\nexport const onLoading = () => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>LOADING...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const onError = (errorMsg) => {\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>{errorMsg}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Indicator = ({ nowPlaying, activeIndex, setActiveIndex }) => {\r\n  const goToSlide = (index) => {\r\n    setActiveIndex(index);\r\n  };\r\n  return (\r\n    <ul className=\"carousel__indicators\">\r\n      {nowPlaying.slice(0, 10).map((slide, index) => {\r\n        return (\r\n          <li key={index}>\r\n            <a\r\n              className={\r\n                index == activeIndex\r\n                  ? \"carousel__indicator carousel__indicator--active\"\r\n                  : \"carousel__indicator\"\r\n              }\r\n              onClick={(e) => goToSlide(index)}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Indicator;\r\n","import React from \"react\";\r\n\r\nconst Arrow = ({ direction, activeIndex, setActiveIndex }) => {\r\n  const onArrowClick = (e) => {\r\n    e.preventDefault();\r\n    let index = activeIndex;\r\n    let slideLength = 9;\r\n    if (direction === \"left\") {\r\n      if (index < 1) {\r\n        index = slideLength;\r\n      } else {\r\n        --index;\r\n      }\r\n    } else if (direction === \"right\") {\r\n      if (index == slideLength) {\r\n        index = 0;\r\n      } else {\r\n        ++index;\r\n      }\r\n    }\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  return (\r\n    <a\r\n      href=\"#\"\r\n      // className=\"carousel__arrow carousel__arrow--right\"\r\n      className={`carousel__arrow carousel__arrow--${direction}`}\r\n      onClick={(e) => onArrowClick(e)}\r\n    >\r\n      <span className={`fa fa-2x fa-angle-${direction}`} />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { moviePoster, imgNotFound } from \"../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Carousel.scss\";\r\nimport axios from \"axios\";\r\nimport Indicator from \"./Indicator\";\r\nimport Arrow from \"./Arrow\";\r\n\r\nconst MovieCarousel = ({ genreById }) => {\r\n  const [nowPlaying, setNowPlaying] = useState([]);\r\n  // const path = nowPlaying[0].poster_path;\r\n  // console.log(nowPlaying[0]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/movie/now_playing\", {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data.results);\r\n        setNowPlaying(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <div className=\"carousel\">\r\n        <Arrow\r\n          direction=\"left\"\r\n          activeIndex={activeIndex}\r\n          setActiveIndex={setActiveIndex}\r\n        />\r\n        <ul className=\"slides\">\r\n          {nowPlaying.slice(0, 10).map((slide, index) => {\r\n            return (\r\n              <li\r\n                className={\r\n                  index == activeIndex ? \"slide slide--active\" : \"slide\"\r\n                }\r\n                // className=\"slide\"\r\n                key={index}\r\n              >\r\n                <div className=\"img-backdrop\">\r\n                  <img\r\n                    src={moviePoster(slide.backdrop_path)}\r\n                    alt={slide.title}\r\n                    onError={imgNotFound}\r\n                  />\r\n                  <div>\r\n                    <h1>\r\n                      <Link to={`/movie/${slide.id}`}>\r\n                        {slide.title} ({slide.release_date.split(\"-\")[0]})\r\n                      </Link>\r\n                    </h1>\r\n                    <p>\r\n                      <span>TMDb </span>\r\n                      {slide.vote_average}\r\n                    </p>\r\n                    <ul>\r\n                      <span>Genre: </span>{\" \"}\r\n                      {slide.genre_ids\r\n                        ? slide.genre_ids.map((item, index) => {\r\n                            return <li key={index}>{genreById[item]}</li>;\r\n                          })\r\n                        : null}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        <Arrow\r\n          direction=\"right\"\r\n          activeIndex={activeIndex}\r\n          setActiveIndex={setActiveIndex}\r\n        />\r\n        <Indicator\r\n          nowPlaying={nowPlaying}\r\n          activeIndex={activeIndex}\r\n          setActiveIndex={setActiveIndex}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCarousel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { imgNotFound, moviePoster } from \"../utils\";\r\n\r\nconst TopRatedMovies = () => {\r\n  const [topRated, setTopRated] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/movie/top_rated\", {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setTopRated(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"container-fluid sr-container bg-bgc mb-3\">\r\n      <h3 className=\"text-fmv pl-4\">Top Rated movies</h3>\r\n\r\n      {/* <Pagination searchQuery={searchQuery} totalPages={totalPages} /> */}\r\n\r\n      <ul className=\"row justify-content-center sr-row pl-3 mt-4\">\r\n        {topRated\r\n          ? topRated.slice(0, 18).map((item) => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className=\"col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12 sr-col pl-1 pr-1 mb-2 \"\r\n                >\r\n                  <Link to={`/movie/${item.id}`}>\r\n                    <img\r\n                      src={moviePoster(item.poster_path)}\r\n                      alt={item.title}\r\n                      // style={{ width: \"150px\" }}\r\n                      onError={imgNotFound}\r\n                    />\r\n                    <p className=\"\">{item.title}</p>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { imgNotFound, moviePoster } from \"../utils\";\r\nimport axios from \"axios\";\r\n\r\nconst PopularMovies = () => {\r\n  const [popular, setPopular] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/movie/popular\", {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setPopular(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"container-fluid sr-container bg-bgc mb-3\">\r\n      <h3 className=\"text-fmv pl-4\">Popular movies</h3>\r\n\r\n      {/* <Pagination searchQuery={searchQuery} totalPages={totalPages} /> */}\r\n\r\n      <ul className=\"row justify-content-center sr-row pl-3 mt-4\">\r\n        {popular\r\n          ? popular.slice(0, 18).map((item) => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className=\"col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12 sr-col pl-1 pr-1 mb-2 \"\r\n                >\r\n                  <Link to={`/movie/${item.id}`}>\r\n                    <img\r\n                      src={moviePoster(item.poster_path)}\r\n                      alt={item.title}\r\n                      // style={{ width: \"150px\" }}\r\n                      onError={imgNotFound}\r\n                    />\r\n                    <p className=\"\">{item.title}</p>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { imgNotFound, moviePoster } from \"../utils\";\r\n\r\nconst UpcomingMovies = () => {\r\n  const [upcoming, setUpcoming] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/movie/upcoming\", {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setUpcoming(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"container-fluid sr-container bg-bgc mb-3\">\r\n      <h3 className=\"text-fmv pl-4\">Upcoming movies</h3>\r\n\r\n      {/* <Pagination searchQuery={searchQuery} totalPages={totalPages} /> */}\r\n\r\n      <ul className=\"row justify-content-center sr-row pl-3 mt-4\">\r\n        {upcoming\r\n          ? upcoming.slice(0, 18).map((item) => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className=\"col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12 sr-col pl-1 pr-1 mb-2 \"\r\n                >\r\n                  <Link to={`/movie/${item.id}`}>\r\n                    <img\r\n                      src={moviePoster(item.poster_path)}\r\n                      alt={item.title}\r\n                      // style={{ width: \"150px\" }}\r\n                      onError={imgNotFound}\r\n                    />\r\n                    <p className=\"\">{item.title}</p>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MovieCarousel from \"./Carousel/MovieCarousel\";\r\nimport TopRatedMovies from \"./TopRatedMovies\";\r\nimport PopularMovies from \"./PopularMovies\";\r\nimport UpcomingMovies from \"./UpcomingMovies\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const [genreById, setGenreById] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/genre/movie/list\", {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        var merge = {};\r\n        res.data.genres.map((item) => {\r\n          merge[item[\"id\"]] = item[\"name\"];\r\n        });\r\n        // console.log(merge);\r\n        setGenreById(merge);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div style={{ backgroundColor: \"#1e2129\" }}>\r\n      <MovieCarousel genreById={genreById} />\r\n      <PopularMovies />\r\n      <TopRatedMovies />\r\n\r\n      <UpcomingMovies />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./static/SearchPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst SearchPage = () => {\r\n  return (\r\n    <div className=\"container-searchpage\">\r\n      <div className=\"logo \">\r\n        <h1 className=\"bg-fmv rounded p-1 mt-4 mb-3 text-white\">GETMOVIES</h1>\r\n      </div>\r\n\r\n      <SearchBox />\r\n\r\n      <p\r\n        style={{\r\n          fontSize: \"1.2em\",\r\n          textAlign: \"center\",\r\n          padding: \"1em 1.5em \",\r\n        }}\r\n      >\r\n        getmovies - Just the place for getting reviews of movies!{\" \"}\r\n      </p>\r\n      <div className=\"homebtn\">\r\n        <Link to=\"/Home\" className=\"btn btn-primary btn-lg bg-fmv mt-2 \">\r\n          Go to Home page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Credits = ({ movieId }) => {\r\n  const [castMember, setCastMember] = useState([]);\r\n  //   const [crewMember, setCrewMember] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCastMember(res.data.cast);\r\n        // setCrewMember(res.data.crew);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <ul>\r\n      <span>Credits:</span>\r\n      {castMember.map((cast, index) => {\r\n        if (index < 6) {\r\n          return (\r\n            <li style={{ listStyle: \"none\", margin: \"0 8px\" }} key={index}>\r\n              <Link to=\"#\" className=\"cast-list text-fmv\">\r\n                {cast.name}\r\n              </Link>\r\n              ,{\" \"}\r\n            </li>\r\n          );\r\n        }\r\n      })}\r\n      {/* <Link to=\"#\" className=\"all-cast-list\">\r\n        list of all cast and characters\r\n      </Link> */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { imgNotFound, onError, onLoading, moviePoster } from \"./utils\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./static/SearchItem.scss\";\r\nimport Credits from \"./Credits\";\r\n\r\nconst SearchItem = () => {\r\n  const movieId = useParams();\r\n  const [movieData, setMovieData] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!movieData) {\r\n      history.push(\"/movie-info-with-react\");\r\n    }\r\n  }, [movieData]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${movieId.id}`, {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setMovieData(res.data);\r\n        // dispatch({ type: \"MOVIE_ITEM\", payload: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err) {\r\n        //   dispatch({ type: \"ON_ERROR\" });\r\n        // }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(movieData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 container-item bg-bgc text-white\">\r\n      <div className=\"error-loading\">\r\n        {/* {loading ? onLoading() : null} */}\r\n        {/* {error ? onError(error) : null} */}\r\n      </div>\r\n      <div className=\"container-movie-detail\">\r\n        <div className=\"img-backdrop\">\r\n          <img\r\n            src={moviePoster(movieData.backdrop_path)}\r\n            alt={movieData.title}\r\n            onError={imgNotFound}\r\n          />\r\n          <div>\r\n            <h1>{movieData.title}</h1>\r\n            <p>{movieData.tagline}</p>\r\n            <ul>\r\n              <span>Genre: </span>{\" \"}\r\n              {movieData.genres\r\n                ? movieData.genres.map((item) => {\r\n                    return <li key={item.id}>{item.name}</li>;\r\n                  })\r\n                : null}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row pl-5 pr-5 pb-5 movie-detail \">\r\n          <img\r\n            className=\"offset-lg-1 col-xl-3 col-lg-3 col-md-4 col-sm-4 img-poster\"\r\n            src={moviePoster(movieData.poster_path)}\r\n            alt={movieData.title}\r\n            onError={imgNotFound}\r\n          />\r\n          <div className=\"offset-xl-1 offset-lg-1 offset-sm-1 col-lg-6 col-md-6 col-sm-6 align-self-center descriptions\">\r\n            <p>\r\n              <span>Overview:</span> {movieData.overview}\r\n            </p>\r\n\r\n            <Credits movieId={movieId.id} />\r\n            <p>\r\n              <span>Release Date:</span> {movieData.release_date}\r\n            </p>\r\n            <p>\r\n              <span>Box Office Revenue:</span> {movieData.revenue} USD\r\n            </p>\r\n            <p>\r\n              <span>language:</span> {movieData.original_language}\r\n            </p>\r\n            <p>\r\n              <span>adult:</span> {movieData.adult ? \"true\" : \"false\"}\r\n            </p>\r\n            <ul>\r\n              <span>movie by:</span>\r\n\r\n              {movieData.production_companies\r\n                ? movieData.production_companies.map((item) => {\r\n                    return <li key={item.id}>{item.name} </li>;\r\n                  })\r\n                : null}\r\n            </ul>\r\n\r\n            <p>\r\n              ratings: {movieData.vote_average}/10 amongst{\" \"}\r\n              {movieData.vote_count} voters\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ searchQuery, totalPages }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const nextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const firstPage = () => {\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const lastPage = () => {\r\n    setCurrentPage(totalPages);\r\n  };\r\n  const pages = (n) => {\r\n    let pages = [];\r\n    for (let i = 1; i <= n; i++) {\r\n      pages.push(i);\r\n    }\r\n    return pages;\r\n  };\r\n\r\n  const pageNos = pages(totalPages);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <ul className=\"pagination\">\r\n        <li\r\n          className=\"page-item\"\r\n          key=\"fp\"\r\n          className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n        >\r\n          <Link\r\n            className=\"page-link bg-fmv text-white border-0\"\r\n            to={`/search_results/${searchQuery.split(\" \").join(\"_\")}/1`}\r\n            onClick={firstPage}\r\n          >\r\n            {\"<<\"}\r\n          </Link>\r\n        </li>\r\n\r\n        {currentPage !== 1 ? (\r\n          <li\r\n            className=\"page-item\"\r\n            key=\"pp\"\r\n            className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n          >\r\n            <Link\r\n              className=\"page-link bg-fmv text-white border-0\"\r\n              onClick={prevPage}\r\n              to={`/search_results/${searchQuery.split(\" \").join(\"_\")}/${\r\n                currentPage - 1\r\n              }`}\r\n            >\r\n              {\"<\"}\r\n            </Link>\r\n          </li>\r\n        ) : null}\r\n\r\n        {pageNos.map((value, index) => {\r\n          if (value === currentPage) {\r\n            return (\r\n              <li\r\n                className=\"page-item\"\r\n                key={index}\r\n                className=\"btn btn-outline-primary bg-primary p-1 mr-1\"\r\n              >\r\n                <Link\r\n                  className=\"page-link bg-primary text-white border-0\"\r\n                  to={`/search_results/${searchQuery\r\n                    .split(\" \")\r\n                    .join(\"_\")}/${value}`}\r\n                  onClick={() => {\r\n                    setCurrentPage(value);\r\n                  }}\r\n                >\r\n                  {value}\r\n                </Link>\r\n              </li>\r\n            );\r\n          } else if (value < currentPage && value > currentPage - 3) {\r\n            return (\r\n              <li\r\n                className=\"page-item\"\r\n                key={index}\r\n                className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n              >\r\n                <Link\r\n                  className=\"page-link bg-fmv text-white border-0\"\r\n                  to={`/search_results/${searchQuery\r\n                    .split(\" \")\r\n                    .join(\"_\")}/${value}`}\r\n                  onClick={() => {\r\n                    setCurrentPage(value);\r\n                  }}\r\n                >\r\n                  {value}\r\n                </Link>\r\n              </li>\r\n            );\r\n          } else if (value > currentPage && value < currentPage + 3) {\r\n            return (\r\n              <li\r\n                className=\"page-item\"\r\n                key={index}\r\n                className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n              >\r\n                <Link\r\n                  className=\"page-link bg-fmv text-white border-0\"\r\n                  to={`/search_results/${searchQuery\r\n                    .split(\" \")\r\n                    .join(\"_\")}/${value}`}\r\n                  onClick={() => {\r\n                    setCurrentPage(value);\r\n                  }}\r\n                >\r\n                  {value}\r\n                </Link>\r\n              </li>\r\n            );\r\n          }\r\n        })}\r\n\r\n        {currentPage !== totalPages ? (\r\n          <li\r\n            className=\"page-item\"\r\n            key=\"np\"\r\n            className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n          >\r\n            <Link\r\n              className=\"page-link bg-fmv text-white border-0\"\r\n              onClick={nextPage}\r\n              to={`/search_results/${searchQuery.split(\" \").join(\"_\")}/${\r\n                currentPage + 1\r\n              }`}\r\n            >\r\n              {\">\"}\r\n            </Link>\r\n          </li>\r\n        ) : null}\r\n\r\n        <li\r\n          className=\"page-item\"\r\n          key=\"lp\"\r\n          className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n        >\r\n          <Link\r\n            className=\"page-link bg-fmv text-white border-0\"\r\n            to={`/search_results/${searchQuery\r\n              .split(\" \")\r\n              .join(\"_\")}/${totalPages}`}\r\n            onClick={lastPage}\r\n          >\r\n            {\">>\"}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <ul className=\"pagination\">\r\n  //       {pageNos.map((value, index) => {\r\n  //         return (\r\n  //           <li\r\n  //             className=\"page-item\"\r\n  //             key={index}\r\n  //             className=\"btn btn-outline-fmv bg-fmv p-1 mr-1\"\r\n  //           >\r\n  //             <Link\r\n  //               className=\"page-link bg-fmv text-white border-0\"\r\n  //               to={`/search_results/${searchQuery\r\n  //                 .split(\" \")\r\n  //                 .join(\"_\")}/${value}`}\r\n  //             >\r\n  //               {value}\r\n  //             </Link>\r\n  //           </li>\r\n  //         );\r\n  //       })}\r\n  //     </ul>\r\n  //   </div>\r\n  // );\r\n};\r\nexport default Pagination;\r\n","import React, { useState, useEffect, useContext, useReducer } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { searchQueryContext } from \"../App\";\r\nimport { imgNotFound, moviePoster } from \"./utils\";\r\nimport Pagination from \"./Pagination\";\r\nimport axios from \"axios\";\r\nimport \"./static/Searchresults.scss\";\r\n\r\nconst initialSearchStater = { page: 1, movieData: [] };\r\n\r\nconst searchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst SearchResult2 = () => {\r\n  const params = useParams();\r\n  const { searchQuery } = useContext(searchQueryContext);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      history.push(\"/movie-info-with-react\");\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  // initial api query\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/search/movie\", {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n          query: searchQuery,\r\n          page: params.pageNo,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"movies\");\r\n        console.log(res.data);\r\n        setTotalPages(res.data.total_pages);\r\n        setSearchResults(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [searchQuery, params.pageNo]);\r\n\r\n  return (\r\n    <div className=\"container-fluid sr-container bg-bgc\">\r\n      <h4 style={{ color: \"#FFF\", textAlign: \"center\" }}>\r\n        search results for \"{searchQuery}\"\r\n      </h4>\r\n\r\n      <Pagination searchQuery={searchQuery} totalPages={totalPages} />\r\n\r\n      <ul className=\"row justify-content-center sr-row pl-3 mt-4\">\r\n        {searchResults\r\n          ? searchResults.map((item) => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 sr-col pl-1 pr-1 mb-2 \"\r\n                >\r\n                  <Link to={`/movie/${item.id}`}>\r\n                    <img\r\n                      src={moviePoster(item.poster_path)}\r\n                      alt={item.title}\r\n                      // style={{ width: \"150px\" }}\r\n                      onError={imgNotFound}\r\n                    />\r\n                    <p className=\"\">{item.title}</p>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult2;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport \"./App.scss\";\r\nimport axios from \"axios\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Components/Home/Home\";\r\n// import SearchResults from \"./Components/SearchResults\";\r\nimport SearchPage from \"./Components/SearchPage\";\r\nimport SearchItem from \"./Components/SearchItem\";\r\nimport SearchResult2 from \"./Components/SearchResult2\";\r\n\r\nexport const searchQueryContext = React.createContext();\r\nexport const movieDataContext = React.createContext();\r\n\r\n// const initialMovieDatastate = {\r\n//   loading: true,\r\n//   error: \"\",\r\n//   movieData: [],\r\n// };\r\n\r\n// const reducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"MOVIE_SEARCH_SUCCESS\":\r\n//       return { ...state, loading: false, error: \"\", movieData: action.payload };\r\n//     case \"ON_RETURN\":\r\n//       return { ...state, loading: true, movieData: [] };\r\n//     case \"ON_ERROR\":\r\n//       return { ...state, loading: false, error: \"error\" };\r\n//     case \"MOVIE_ITEM\":\r\n//       return { ...state, loading: false, error: \"\", movieData: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // const [movieDataState, dispatch] = useReducer(reducer, initialMovieDatastate);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"https://api.themoviedb.org/3/search/movie\", {\r\n  //       params: {\r\n  //         api_key: process.env.REACT_APP_API_KEY,\r\n  //         query: searchQuery,\r\n  //       },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       // console.log(res);\r\n  //       dispatch({ type: \"MOVIE_SEARCH_SUCCESS\", payload: res.data });\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //       // dispatch({ type: \"ON_ERROR\" });\r\n  //     });\r\n  // }, [searchQuery]);\r\n\r\n  return (\r\n    <div>\r\n      <searchQueryContext.Provider\r\n        value={{\r\n          searchQuery: searchQuery,\r\n          setSearchQuery: setSearchQuery,\r\n        }}\r\n      >\r\n        <Header />\r\n      </searchQueryContext.Provider>\r\n      {/* route components  */}\r\n\r\n      <searchQueryContext.Provider\r\n        value={{\r\n          searchQuery: searchQuery,\r\n          setSearchQuery: setSearchQuery,\r\n        }}\r\n      >\r\n        <Route\r\n          exact\r\n          path=\"/movie-info-with-react\"\r\n          component={SearchPage}\r\n        ></Route>\r\n      </searchQueryContext.Provider>\r\n\r\n      <Route exact path=\"/Home\" component={Home}></Route>\r\n\r\n      {/* <Route exact path=\"/search_results/:searchQuery\">\r\n        <movieDataContext.Provider\r\n          value={{ movieDataState: movieDataState, dispatch: dispatch }}\r\n        >\r\n          <SearchResults />\r\n        </movieDataContext.Provider>\r\n      </Route> */}\r\n\r\n      {/* <movieDataContext.Provider\r\n        value={{ movieDataState: movieDataState, dispatch: dispatch }}\r\n      > */}\r\n      <Route exact path=\"/movie/:id\" component={SearchItem}></Route>\r\n      {/* </movieDataContext.Provider> */}\r\n\r\n      <searchQueryContext.Provider\r\n        value={{\r\n          searchQuery: searchQuery,\r\n          // setSearchQuery: setSearchQuery,\r\n        }}\r\n      >\r\n        <Route\r\n          exact\r\n          path=\"/search_results/:searchQuery/:pageNo\"\r\n          component={SearchResult2}\r\n        ></Route>\r\n      </searchQueryContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}